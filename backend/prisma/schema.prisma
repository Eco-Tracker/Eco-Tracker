generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id       String       @id @default(cuid())
  bodyCom  String
  post_Id  String
  authorId String
  author   personalUser @relation(fields: [authorId], references: [id])
  posts    posts        @relation(fields: [post_Id], references: [post_Id])
}

model events {
  idEV         String           @id @default(cuid())
  name         String
  description  String
  image        String
  participants Int
  like         Int
  date         DateTime
  location     String
  authorId     String
  author       profissionalUser @relation(fields: [authorId], references: [id])
}

model personalUser {
  id         String       @id @default(cuid())
  photo      String?
  name       String
  mail       String       @unique
  phone      Int
  banned     Boolean      @default(false)
  challenges challenges[]
  comments   comments[]
  posts      posts[]
}

model posts {
  post_Id  String       @id @default(cuid())
  type     String
  title    String
  body     String
  image    String
  like     Int
  authorId String
  comments comments[]
  author   personalUser @relation(fields: [authorId], references: [id])
}

model profissionalUser {
  id               String   @id @default(cuid())
  professionalName String
  professionalMail String   @unique
  contactNumber    Int
  codeFiscal       String
  picture          String
  banned           Boolean  @default(false)
  events           events[]
}

model admin {
  adminId String @id @default(cuid())
  email   String
}

model challenges {
  id          String       @id @default(cuid())
  name        String
  description String
  deadline    DateTime
  points      Int
  isCompleted Boolean
  authorId    String
  author      personalUser @relation(fields: [authorId], references: [id])
}

model userChallenge {
  id          String  @id @default(cuid())
  idChallenge String
  idUser      String
  isCompleted Boolean @default(false)
}
